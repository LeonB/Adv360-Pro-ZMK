
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "keypos_adv360.h"

#define HYPR LC(RS(LA(LGUI)))
#define HY(KC) LC(RS(LA(LG(KC))))
#define MEH LC(RS(LALT))

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick_tap_ms = <175>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    bspc_del: backspace_delete {
      compatible = "zmk,behavior-mod-morph";
      label = "BACKSPACE_DELETE";
      #binding-cells = <0>;
      bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_RSFT)>;
    };

    // Swapper for smart alt+tab
    swapper: swapper {
      compatible = "zmk,behavior-tri-state";
      label = "SWAPPER";
      #binding-cells = <0>;
      bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
      ignored-key-positions = <21>;
    };

    /*
    hml: homerow_mods_l {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS_L";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick_tap_ms = <175>;
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
      global-quick-tap;
      retro-tap;
      hold-trigger-key-positions = <KEYS_R THUMBS>;
    };

    hmr: homerow_mods_r {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS_R";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick_tap_ms = <175>;
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
      global-quick-tap;
      retro-tap;
      hold-trigger-key-positions = <KEYS_L THUMBS>;
    };
    */
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL     &kp N1    &kp N2   &kp N3   &kp N4    &kp N5 &tog 1                                                                 &mo 3 &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB       &kp Q     &kp W    &kp E    &kp R     &kp T  &none                                                                  &none &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &mt LCTRL ESC &kp A     &kp S    &kp D    &kp F     &kp G  &none            &kp LGUI  &kp LALT /**/ &kp RALT  &kp RGUI            &none &kp H  &kp J  &kp K     &kp L    &kp SEMI &mt RCTRL SQT
        &kp LSHFT     &kp Z     &kp X    &kp C    &kp V     &kp B                             &kp HOME /**/ &kp PG_UP                           &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo 2         &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT               &bspc_del &mo 4     &kp END  /**/ &kp PG_DN &kp ENTER &kp SPACE              &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo 2
      >;
    };
    keypad {
      bindings = <
        &trans &trans &trans &trans &trans &trans &trans                                                &trans &trans &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &trans
        &trans &trans &trans &trans &trans &trans &trans                                                &trans &trans &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &trans
        &trans &trans &trans &trans &trans &trans &trans        &trans &trans /**/ &trans &trans        &trans &trans &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &trans
        &trans &trans &trans &trans &trans &trans                      &trans /**/ &trans                      &trans &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans /**/ &trans &trans &trans               &trans     &trans       &trans        &trans
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2    &kp F3   &kp F4    &kp F5    &kp F6 &tog 1                                                 &trans &kp F7 &kp F8    &kp F9   &kp F10  &kp F11   &kp F12
        &trans &trans    &trans   &trans    &trans    &trans  &trans                                                &trans &trans &trans    &trans   &trans   &trans    &trans
        &trans &sk LCTRL &sk LALT &sk LGUI  &sk LSHFT &trans  &trans        &trans &trans /**/ &trans &trans        &trans &trans &sk RSHFT &sk RGUI &sk RALT &sk LCTRL &trans
        &trans &trans    &trans   &trans    &trans    &trans                       &trans /**/ &trans                      &trans &trans    &trans   &trans   &trans    &trans
        &trans &trans    &trans   &trans    &trans                   &trans &trans &trans /**/ &trans &trans &trans               &trans    &trans   &trans   &trans    &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };
    nav {
      bindings = <
        &trans &trans    &trans    &trans    &trans    &trans    &trans                                                &trans &trans    &trans      &trans          &trans    &trans    &trans
        &trans &kp HY(Q) &kp HY(W) &kp HY(E) &kp HY(R) &kp HY(T) &trans                                                &trans &kp HY(Y) &kp HY(U)   &kp HY(I)       &kp HY(O) &kp HY(P) &trans
        &trans &kp HY(A) &kp HY(S) &kp HY(D) &kp HY(F) &kp HY(G) &trans        &trans &trans /**/ &trans &trans        &trans &kp HY(H) &kp LG(TAB) &kp LS(LG(TAB)) &kp HY(L) &kp HY(L) &trans
        &trans &kp HY(Z) &kp HY(X) &kp HY(C) &kp HY(V) &kp HY(B)                      &trans /**/ &trans                      &kp HY(N) &kp HY(M)   &trans          &trans    &trans    &trans
        &trans &trans    &trans    &trans    &trans                     &trans &trans &trans /**/ &trans &trans &trans                  &trans      &trans          &trans    &trans    &trans
      >;
    };
  };
};

// vim: set ft=c shiftwidth=2 tabstop=2 expandtab:
